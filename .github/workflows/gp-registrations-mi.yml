name: 'gp-registrations-mi-task'
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

permissions:
  pull-requests: write
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  terraform_process:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ dev, prod ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
            role-skip-session-tagging: true
            aws-region: ${{ vars.AWS_REGION }}

      - name: View AWS Role
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=backend.conf
        working-directory: ./stacks/gp-registrations-mi/terraform
        shell: bash

      - name: terraform validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./stacks/gp-registrations-mi/terraform


      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./stacks/gp-registrations-mi/terraform

      - name: Build lambdas
        run: | 
            ./tasks build-lambda

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Make virtual environment
        run: |
          python3 -m venv ./venv
          ./venv/bin/pip3 install --upgrade pip

      - name: Get ods csv files
        run: |
          ./venv/bin/python3 stacks/gp-registrations-mi/scripts/get_latest_ods_csv.py ${{ secrets.TRUD_API_KEY }} ${{ secrets.TRUD_API_URL }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var environment=${{ matrix.sandbox-name }} -no-color -var-file=./stacks/gp-registrations-mi/vars/${{ matrix.sandbox-name }}.tfvars -out /stacks/gp-registrations-mi/terraform/${{ matrix.sandbox-name }}.tfplan
        working-directory: ./stacks/gp-registrations-mi/terraform
        shell: bash

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve -input=false tf.plan
        working-directory: ./stacks/gp-registrations-mi/terraform