format_version: 4
pipelines:
  "gp-registrations-mi-task":
    group: gp-registrations-mi-infra
    label_template: "${gp_registrations_mi_task[:8]}"
    materials:
      gp_registrations_mi_task:
        plugin_configuration:
          id: git-path
        options:
          url: https://github.com/nhsconnect/prm-gp-registrations-mi-infra.git
          path: stacks/gp-registrations-mi, lambda/error-alarm-alert,lambda/splunk-cloud-event-uploader, lambda/event-enrichment, lambda/s3-event-uploader
      gp_registrations_mi_image:
        pipeline: prm-gp-registrations-mi
        stage: publish_docker
    stages:
      - validate:
          clean_workspace: true
          jobs:
            test:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-validate gp-registrations-mi dev
      - plan_dev:
          clean_workspace: true
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: stacks/gp-registrations-mi/terraform/dev.tfplan
                    destination: stacks/gp-registrations-mi/terraform
                - build:
                    source: stacks/gp-registrations-mi/terraform/.terraform.lock.hcl
                    destination: stacks/gp-registrations-mi/terraform
                - build:
                    source: lambda/build/error-alarm-alert.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/splunk-cloud-event-uploader.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/event-enrichment.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/s3-event-uploader.zip
                    destination: lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - TF_VAR_gp_registrations_mi_image_tag=$GO_DEPENDENCY_LABEL_GP_REGISTRATIONS_MI_IMAGE ./tasks dojo-plan gp-registrations-mi dev
      - apply_dev:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            apply:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: stacks/gp-registrations-mi/terraform/dev.tfplan
                    destination: stacks/gp-registrations-mi/terraform
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: stacks/gp-registrations-mi/terraform/.terraform.lock.hcl
                    destination: stacks/gp-registrations-mi/terraform
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/error-alarm-alert.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/splunk-cloud-event-uploader.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/event-enrichment.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_dev
                    job: plan
                    source: lambda/build/s3-event-uploader.zip
                    destination: lambda/build/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-apply gp-registrations-mi dev
      - promote_to_prod:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            apply:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./scripts/promote-image dev prod mi-api $GO_DEPENDENCY_LABEL_GP_REGISTRATIONS_MI_IMAGE
      - plan_prod:
          clean_workspace: true
          jobs:
            plan:
              resources:
                - docker
              artifacts:
                - build:
                    source: stacks/gp-registrations-mi/terraform/prod.tfplan
                    destination: stacks/gp-registrations-mi/terraform
                - build:
                    source: stacks/gp-registrations-mi/terraform/.terraform.lock.hcl
                    destination: stacks/gp-registrations-mi/terraform
                - build:
                    source: lambda/build/error-alarm-alert.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/splunk-cloud-event-uploader.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/event-enrichment.zip
                    destination: lambda/build/
                - build:
                    source: lambda/build/s3-event-uploader.zip
                    destination: lambda/build/
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - TF_VAR_gp_registrations_mi_image_tag=$GO_DEPENDENCY_LABEL_GP_REGISTRATIONS_MI_IMAGE ./tasks dojo-plan gp-registrations-mi prod
      - apply_prod:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            apply:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: stacks/gp-registrations-mi/terraform/prod.tfplan
                    destination: stacks/gp-registrations-mi/terraform
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: stacks/gp-registrations-mi/terraform/.terraform.lock.hcl
                    destination: stacks/gp-registrations-mi/terraform
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: lambda/build/error-alarm-alert.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: lambda/build/splunk-cloud-event-uploader.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: lambda/build/event-enrichment.zip
                    destination: lambda/build/
                    is_file: yes
                - fetch:
                    stage: plan_prod
                    job: plan
                    source: lambda/build/s3-event-uploader.zip
                    destination: lambda/build/
                    is_file: yes
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks dojo-apply gp-registrations-mi prod
